  docker.enabled = true
  def viash_temp = System.getenv("VIASH_TEMP") ?: "/tmp/"
  docker.runOptions = "-i -v ${baseDir}:${baseDir} -v $viash_temp:$viash_temp"
  process.container = "dataintuitive/viash"
  params {
    censor_dataset__input_mod1 = "viash_no_value"
    censor_dataset__input_mod2 = "viash_no_value"
    censor_dataset__output_train_mod1 = "viash_no_value"
    censor_dataset__output_train_mod2 = "viash_no_value"
    censor_dataset__output_test_mod1 = "viash_no_value"
    censor_dataset__output_test_mod2 = "viash_no_value"
    censor_dataset__seed = "no_default_value_configured"
    censor_dataset__max_mod1_columns = "no_default_value_configured"
    censor_dataset__max_mod2_columns = "no_default_value_configured"
    id = ""
    testScript = "test.R"
    testResources = [ "test.R", "../../../../resources_test" ]
    censor_dataset {
      name = "censor_dataset"
      container = "predict_modality_datasets_censor_dataset"
      containerTag = "main_build"
      containerRegistry = "openproblems"
      command = "censor_dataset"
      tests {
        isDefined = true
        testScript = "test.R"
        testResources = [ "test.R", "../../../../resources_test" ]
      }
      arguments {
        input_mod1 {
          name = "input_mod1"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__input_mod1}"
          example = "dataset.h5ad"
          description = "An input h5ad dataset."
        }
        input_mod2 {
          name = "input_mod2"
          otype = "--"
          required = true
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__input_mod2}"
          example = "dataset.h5ad"
          description = "An input h5ad dataset."
        }
        output_train_mod1 {
          name = "output_train_mod1"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__output_train_mod1}"
          example = "dataset_train_mod1.h5ad"
          description = "Mod1 h5ad file for only the train cells."
        }
        output_train_mod2 {
          name = "output_train_mod2"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__output_train_mod2}"
          example = "dataset_mod2.h5ad"
          description = "Mod2 h5ad file for only the train cells."
        }
        output_test_mod1 {
          name = "output_test_mod1"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__output_test_mod1}"
          example = "dataset_test_mod1.h5ad"
          description = "Mod1 h5ad file for only the test cells."
        }
        output_test_mod2 {
          name = "output_test_mod2"
          otype = "--"
          required = true
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__output_test_mod2}"
          example = "dataset_solution.h5ad"
          description = "Mod2 h5ad file for only the test cells."
        }
        seed {
          name = "seed"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__seed}"
          description = "The seed for determining the train/test split."
        }
        max_mod1_columns {
          name = "max_mod1_columns"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__max_mod1_columns}"
          description = "The maximum number of columns in mod1."
        }
        max_mod2_columns {
          name = "max_mod2_columns"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.censor_dataset__max_mod2_columns}"
          description = "The maximum number of columns in mod2."
        }
      }
    }
  }